{"version":3,"file":"js/270.409d9ad3.js","mappings":"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","sources":["webpack://fairr-web-client/./src/views/VendorView.vue","webpack://fairr-web-client/./src/views/VendorView.vue?4f03","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbsDivider.tsx","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"sourcesContent":["<template>\n  <v-container>\n    <v-breadcrumbs :items=\"breadcrumbs\" class=\"pt-0\">\n      <template #divider>\n        <v-icon icon=\"mdi-chevron-right\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n\n    <div v-if=\"vendor\" class=\"mb-4\">\n      <v-row>\n        <v-col cols=\"12\" md=\"4\">\n          <v-img\n            :src=\"vendor.image\"\n            alt=\"Vendor Logo\"\n            class=\"rounded\"\n            height=\"200px\"\n            cover\n          />\n        </v-col>\n\n        <v-col cols=\"12\" md=\"8\">\n          <v-card-title>\n            {{ vendor.name }}\n          </v-card-title>\n          <v-card-subtitle class=\"text-muted mb-2\">\n            {{ vendor.address }}\n          </v-card-subtitle>\n          <v-card-text>\n            <p>{{ vendor.description }}</p>\n            <v-list>\n              <v-list-item v-if=\"vendor.phone\" class=\"pa-0\">\n                <v-list-item-title>\n                  <v-icon color=\"primary\" class=\"mr-2\">mdi-phone</v-icon>\n                  <a :href=\"`tel:${vendor.phone}`\">{{ vendor.phone }}</a>\n                </v-list-item-title>\n              </v-list-item>\n\n              <v-list-item v-if=\"vendor.email\" class=\"pa-0\">\n                <v-list-item-title>\n                  <v-icon color=\"primary\" class=\"mr-2\">mdi-email</v-icon>\n                  <a :href=\"`mailto:${vendor.email}`\">{{ vendor.email }}</a>\n                </v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-card-text>\n        </v-col>\n      </v-row>\n    </div>\n\n    <v-divider class=\"mb-6\" />\n\n    <!-- Products List Section -->\n    <v-card>\n      <v-card-title>Products</v-card-title>\n\n      <v-card-text>\n        <div\n          v-if=\"productsStore.loading\"\n          class=\"d-flex align-center justify-center pa-6\"\n        >\n          <v-progress-circular indeterminate color=\"primary\" />\n        </div>\n\n        <v-row v-else>\n          <v-col\n            v-for=\"product in productsList\"\n            :key=\"product.id\"\n            xl=\"2\"\n            lg=\"3\"\n            md=\"4\"\n            sm=\"6\"\n            xs=\"12\"\n          >\n            <product-card :product=\"product\" />\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script setup>\nimport { computed, defineProps, onMounted } from \"vue\";\n\nimport { useVendorsStore } from \"@/stores/vendorsStore\";\nimport { useProductsStore } from \"@/stores/productsStore\";\n\nimport ProductCard from \"@/components/products/ProductCard.vue\";\n\nconst breadcrumbs = [\n  {\n    title: \"Home\",\n    disabled: false,\n    href: \"/\",\n  },\n  {\n    title: \"Store Details\",\n    disabled: true,\n  },\n];\n\nconst vendorsStore = useVendorsStore();\n\nconst productsStore = useProductsStore();\n\nconst props = defineProps({\n  id: String,\n});\n\nconst vendor = computed(() => vendorsStore.getById(props.id));\n\nconst productsList = computed(() => {\n  return (productsStore.products || []).filter(({ vendorId }) => {\n    return vendorId === props.id;\n  });\n});\n\nonMounted(() => {\n  vendorsStore.fetchVendors();\n  productsStore.fetchProducts();\n});\n</script>\n","import script from \"./VendorView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VendorView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsDividerProps = propsFactory({\n  divider: [Number, String],\n\n  ...makeComponentProps(),\n}, 'VBreadcrumbsDivider')\n\nexport const VBreadcrumbsDivider = genericComponent()({\n  name: 'VBreadcrumbsDivider',\n\n  props: makeVBreadcrumbsDividerProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <li\n        class={[\n          'v-breadcrumbs-divider',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots?.default?.() ?? props.divider }\n      </li>\n    ))\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbsDivider = InstanceType<typeof VBreadcrumbsDivider>\n","// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({ tag: 'li' }),\n}, 'VBreadcrumbsItem')\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: makeVBreadcrumbsItemProps(),\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            textColorStyles.value,\n            props.style,\n          ]}\n          aria-current={ isActive.value ? 'page' : undefined }\n        >\n          { !link.isLink.value ? slots.default?.() ?? props.title : (\n            <a\n              class=\"v-breadcrumbs-item--link\"\n              href={ link.href.value }\n              aria-current={ isActive.value ? 'page' : undefined }\n              onClick={ link.navigate }\n            >\n              { slots.default?.() ?? props.title }\n            </a>\n          )}\n        </props.tag>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n","// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type InternalBreadcrumbItem = Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n}\n\nexport type BreadcrumbItem = string | InternalBreadcrumbItem\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: InternalBreadcrumbItem, index: number }\n    divider: { item: T, index: number }\n    item: { item: InternalBreadcrumbItem, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"],"names":["breadcrumbs","title","disabled","href","vendorsStore","useVendorsStore","productsStore","useProductsStore","props","__props","vendor","computed","getById","id","productsList","products","filter","vendorId","onMounted","fetchVendors","fetchProducts","__exports__","makeVBreadcrumbsDividerProps","propsFactory","divider","Number","String","makeComponentProps","VBreadcrumbsDivider","genericComponent","name","setup","_ref","slots","useRender","_createVNode","class","style","default","makeVBreadcrumbsItemProps","active","Boolean","activeClass","activeColor","color","makeRouterProps","makeTagProps","tag","VBreadcrumbsItem","attrs","link","useLink","isActive","value","textColorClasses","textColorStyles","useTextColor","undefined","isLink","navigate","makeVBreadcrumbsProps","bgColor","type","icon","IconValue","items","Array","makeDensityProps","makeRoundedProps","VBreadcrumbs","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","densityClasses","useDensity","roundedClasses","useRounded","provideDefaults","map","item","raw","hasPrepend","prepend","VDefaultsProvider","VIcon","start","_ref2","index","array","_Fragment","_mergeProps","length"],"sourceRoot":""}