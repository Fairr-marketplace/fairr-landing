{"version":3,"file":"js/200.04976434.js","mappings":"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","sources":["webpack://fairr-web-client/./src/views/ShopView.vue","webpack://fairr-web-client/./src/views/ShopView.vue?590d","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbsDivider.tsx","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx","webpack://fairr-web-client/../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"sourcesContent":["<template>\n  <v-container>\n    <v-breadcrumbs :items=\"breadcrumbs\" class=\"pt-0\">\n      <template #divider>\n        <v-icon icon=\"mdi-chevron-right\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n\n    <v-card v-if=\"shop\" class=\"mb-6 elevated-3 pa-3\">\n      <v-row>\n        <v-col cols=\"12\" md=\"4\">\n          <v-img\n            :src=\"shop.image\"\n            alt=\"Vendor Logo\"\n            class=\"rounded\"\n            height=\"200px\"\n            cover\n          />\n        </v-col>\n\n        <v-col cols=\"12\" md=\"8\">\n          <v-card-title>\n            {{ shop.name }}\n          </v-card-title>\n          <v-card-subtitle class=\"text-muted mb-2\">\n            {{ shop.address.line1 }}, {{ shop.address.line2 }}\n          </v-card-subtitle>\n          <v-card-text>\n            <p>{{ shop.description }}</p>\n            <v-list>\n              <v-list-item v-if=\"shop.vendor.phone\" class=\"pa-0\">\n                <v-list-item-title>\n                  <v-icon color=\"primary\" class=\"mr-2\">mdi-phone</v-icon>\n                  <a :href=\"`tel:${shop.vendor.phone}`\">{{ shop.vendor.phone }}</a>\n                </v-list-item-title>\n              </v-list-item>\n\n              <v-list-item v-if=\"shop.vendor.email\" class=\"pa-0\">\n                <v-list-item-title>\n                  <v-icon color=\"primary\" class=\"mr-2\">mdi-email</v-icon>\n                  <a :href=\"`mailto:${shop.vendor.email}`\">{{ shop.vendor.email }}</a>\n                </v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-card-text>\n        </v-col>\n      </v-row>\n    </v-card>\n\n    <v-divider class=\"mb-6\" />\n\n    <!-- Products List Section -->\n    <v-card class=\"elevation-3\">\n      <v-card-title>\n        Products\n      </v-card-title>\n\n      <v-card-text>\n        <div\n          v-if=\"productsStore.loading\"\n          class=\"d-flex align-center justify-center pa-6\"\n        >\n          <v-progress-circular indeterminate color=\"primary\" />\n        </div>\n\n        <v-row v-else>\n          <v-col\n            v-for=\"product in productsList\"\n            :key=\"product.id\"\n            xl=\"2\"\n            lg=\"4\"\n            md=\"4\"\n            sm=\"6\"\n            xs=\"12\"\n          >\n            <product-card :product=\"product\" @click=\"openProduct(product)\"/>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script setup>\nimport { computed, ref, defineProps, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useShopsStore } from \"@/stores/shopsStore\";\nimport { useProductsStore } from \"@/stores/productsStore\";\n\nimport ProductCard from \"@/components/products/ProductCard.vue\";\n\nconst breadcrumbs = [\n  {\n    title: \"Home\",\n    disabled: false,\n    href: \"/\",\n  },\n  {\n    title: \"Store Details\",\n    disabled: true,\n  },\n];\n\nconst shopsStore = useShopsStore();\n\nconst productsStore = useProductsStore();\n\nconst productsList = ref([])\n\nconst props = defineProps({\n  id: String,\n});\n\nconst shop = computed(() => shopsStore.getById(props.id));\n\nconst router = useRouter();\nconst openProduct = ({id}) => {\n  router.push(`/products/${id}`);\n};\n\nconst fetchProducts = async () => {\n  productsList.value = await productsStore.fetchShopProducts(props.id);\n};\n\nonMounted(() => {\n  shopsStore.fetchSingleShop(props.id);\n  fetchProducts();\n});\n</script>\n","import script from \"./ShopView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShopView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsDividerProps = propsFactory({\n  divider: [Number, String],\n\n  ...makeComponentProps(),\n}, 'VBreadcrumbsDivider')\n\nexport const VBreadcrumbsDivider = genericComponent()({\n  name: 'VBreadcrumbsDivider',\n\n  props: makeVBreadcrumbsDividerProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <li\n        class={[\n          'v-breadcrumbs-divider',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots?.default?.() ?? props.divider }\n      </li>\n    ))\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbsDivider = InstanceType<typeof VBreadcrumbsDivider>\n","// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({ tag: 'li' }),\n}, 'VBreadcrumbsItem')\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: makeVBreadcrumbsItemProps(),\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            textColorStyles.value,\n            props.style,\n          ]}\n          aria-current={ isActive.value ? 'page' : undefined }\n        >\n          { !link.isLink.value ? slots.default?.() ?? props.title : (\n            <a\n              class=\"v-breadcrumbs-item--link\"\n              href={ link.href.value }\n              aria-current={ isActive.value ? 'page' : undefined }\n              onClick={ link.navigate }\n            >\n              { slots.default?.() ?? props.title }\n            </a>\n          )}\n        </props.tag>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n","// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type InternalBreadcrumbItem = Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n}\n\nexport type BreadcrumbItem = string | InternalBreadcrumbItem\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: InternalBreadcrumbItem, index: number }\n    divider: { item: T, index: number }\n    item: { item: InternalBreadcrumbItem, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"],"names":["breadcrumbs","title","disabled","href","shopsStore","useShopsStore","productsStore","useProductsStore","productsList","ref","props","__props","shop","computed","getById","id","router","useRouter","openProduct","push","fetchProducts","async","value","fetchShopProducts","onMounted","fetchSingleShop","__exports__","makeVBreadcrumbsDividerProps","propsFactory","divider","Number","String","makeComponentProps","VBreadcrumbsDivider","genericComponent","name","setup","_ref","slots","useRender","_createVNode","class","style","default","makeVBreadcrumbsItemProps","active","Boolean","activeClass","activeColor","color","makeRouterProps","makeTagProps","tag","VBreadcrumbsItem","attrs","link","useLink","isActive","textColorClasses","textColorStyles","useTextColor","undefined","isLink","navigate","makeVBreadcrumbsProps","bgColor","type","icon","IconValue","items","Array","makeDensityProps","makeRoundedProps","VBreadcrumbs","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","densityClasses","useDensity","roundedClasses","useRounded","provideDefaults","map","item","raw","hasPrepend","prepend","VDefaultsProvider","VIcon","start","_ref2","index","array","_Fragment","_mergeProps","length"],"sourceRoot":""}