{"version":3,"file":"js/191.066ca225.js","mappings":"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","sources":["webpack://fairr-web-client/../../../src/components/VChipGroup/VChipGroup.tsx","webpack://fairr-web-client/../../../src/components/VChip/VChip.tsx","webpack://fairr-web-client/../../../src/components/VGrid/VContainer.tsx","webpack://fairr-web-client/../../../src/components/VSlideGroup/helpers.ts","webpack://fairr-web-client/../../../src/components/VSlideGroup/VSlideGroup.tsx"],"sourcesContent":["// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n","/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: String,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false,\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n}, 'VContainer')\n\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n\n  props: makeVContainerProps(),\n\n  setup (props, { slots }) {\n    const { rtlClasses } = useRtl()\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n","export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useGoTo } from '@/composables/goto'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport {\n  calculateCenteredTarget,\n  calculateUpdatedTarget,\n  getClientSize,\n  getOffsetSize,\n  getScrollPosition,\n  getScrollSize,\n} from './helpers'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GoToOptions } from '@/composables/goto'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const goTo = useGoTo()\n    const goToOptions = computed<Partial<GoToOptions>>(() => {\n      return {\n        container: containerRef.el,\n        duration: 200,\n        easing: 'easeOutQuart',\n      }\n    })\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.el) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.el.children[lastSelectedIndex.value] as HTMLElement\n\n            scrollToChildren(selectedElement, props.centerActive)\n          }\n        })\n      })\n    }\n\n    const isFocused = shallowRef(false)\n\n    function scrollToChildren (children: HTMLElement, center?: boolean) {\n      let target = 0\n\n      if (center) {\n        target = calculateCenteredTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          selectedElement: children,\n        })\n      } else {\n        target = calculateUpdatedTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          isRtl: isRtl.value,\n          selectedElement: children,\n        })\n      }\n\n      scrollToPosition(target)\n    }\n\n    function scrollToPosition (newPosition: number) {\n      if (!IN_BROWSER || !containerRef.el) return\n\n      const offsetSize = getOffsetSize(isHorizontal.value, containerRef.el)\n      const scrollPosition = getScrollPosition(isHorizontal.value, isRtl.value, containerRef.el)\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n\n      if (\n        scrollSize <= offsetSize ||\n        // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n        Math.abs(newPosition - scrollPosition) < 16\n      ) return\n\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition = (scrollWidth - containerWidth) - newPosition\n      }\n\n      if (isHorizontal.value) {\n        goTo.horizontal(newPosition, goToOptions.value)\n      } else {\n        goTo(newPosition, goToOptions.value)\n      }\n    }\n\n    function onScroll (e: Event) {\n      const { scrollTop, scrollLeft } = e.target as HTMLElement\n\n      scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.el) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.el.children) {\n          if (item === el) {\n            scrollToChildren(item as HTMLElement)\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren\n    let ignoreFocusEvent = false\n    function onFocus (e: FocusEvent) {\n      if (\n        !ignoreFocusEvent &&\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget as Node))\n      ) focus()\n\n      ignoreFocusEvent = false\n    }\n\n    function onFocusAffixes () {\n      ignoreFocusEvent = true\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.el) return\n\n      function toFocus (location: Parameters<typeof focus>[0]) {\n        e.preventDefault()\n        focus(location)\n      }\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          toFocus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          toFocus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          toFocus('next')\n        } else if (e.key === 'ArrowUp') {\n          toFocus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        toFocus('first')\n      } else if (e.key === 'End') {\n        toFocus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.el) return\n\n      let el: HTMLElement | undefined\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.el)\n        el = focusable[0]\n      } else if (location === 'next') {\n        el = contentRef.el.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('first')\n      } else if (location === 'prev') {\n        el = contentRef.el.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('last')\n      } else if (location === 'first') {\n        el = (contentRef.el.firstElementChild as HTMLElement)\n      } else if (location === 'last') {\n        el = (contentRef.el.lastElementChild as HTMLElement)\n      }\n\n      if (el) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const direction = isHorizontal.value && isRtl.value ? -1 : 1\n\n      const offsetStep = (location === 'prev' ? -direction : direction) * containerSize.value\n\n      let newPosition = scrollOffset.value + offsetStep\n\n      // TODO: improve it\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition += scrollWidth - containerWidth\n      }\n\n      scrollToPosition(newPosition)\n    }\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      // 1 pixel in reserve, may be lost after rounding\n      return Math.abs(scrollOffset.value) > 1\n    })\n\n    const hasNext = computed(() => {\n      if (!containerRef.value) return false\n\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n      const clientSize = getClientSize(isHorizontal.value, containerRef.el)\n\n      const scrollSizeMax = scrollSize - clientSize\n\n      // 1 pixel in reserve, may be lost after rounding\n      return scrollSizeMax - Math.abs(scrollOffset.value) > 1\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n      hasPrev,\n      hasNext,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n"],"names":["VChipGroupSymbol","Symbol","for","makeVChipGroupProps","propsFactory","column","Boolean","filter","valueComparator","type","Function","default","deepEqual","makeVSlideGroupProps","makeComponentProps","makeGroupProps","selectedClass","makeTagProps","makeThemeProps","makeVariantProps","variant","genericComponent","name","props","emits","value","setup","_ref","slots","themeClasses","provideTheme","isSelected","select","next","prev","selected","useGroup","provideDefaults","VChip","color","toRef","disabled","useRender","slideGroupProps","VSlideGroup","filterProps","_createVNode","_mergeProps","class","style","makeVChipProps","activeClass","String","appendAvatar","appendIcon","IconValue","closable","closeIcon","closeLabel","draggable","filterIcon","label","link","undefined","pill","prependAvatar","prependIcon","ripple","Object","text","modelValue","onClick","EventProp","onClickOnce","makeBorderProps","makeDensityProps","makeElevationProps","makeGroupItemProps","makeRoundedProps","makeRouterProps","makeSizeProps","tag","directives","Ripple","e","val","click","attrs","emit","t","useLocale","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","densityClasses","useDensity","elevationClasses","useElevation","roundedClasses","useRounded","sizeClasses","useSize","isActive","useProxiedModel","group","useGroupItem","useLink","isLink","computed","isClickable","closeProps","preventDefault","stopPropagation","navigate","toggle","onKeyDown","key","Tag","hasAppendMedia","hasAppend","append","hasClose","close","hasFilter","hasPrependMedia","hasPrepend","prepend","hasColor","_withDirectives","href","genOverlays","VExpandXTransition","VDefaultsProvider","VIcon","icon","_vShow","VAvatar","image","start","_Fragment","end","size","_resolveDirective","makeVContainerProps","fluid","makeDimensionProps","VContainer","rtlClasses","useRtl","dimensionStyles","useDimension","calculateUpdatedTarget","selectedElement","containerElement","isRtl","isHorizontal","containerSize","getOffsetSize","scrollPosition","getScrollPosition","childrenSize","childrenStartPosition","getOffsetPosition","additionalOffset","calculateCenteredTarget","_ref2","containerOffsetSize","childrenOffsetPosition","childrenOffsetSize","getScrollSize","element","getClientSize","rtl","scrollLeft","offsetWidth","scrollWidth","scrollTop","VSlideGroupSymbol","centerActive","direction","symbol","nextIcon","prevIcon","showArrows","validator","v","includes","makeDisplayProps","mobile","displayClasses","useDisplay","isOverflowing","shallowRef","scrollOffset","contentSize","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","goTo","useGoTo","goToOptions","container","el","duration","easing","firstSelectedIndex","length","items","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","watch","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","scrollToChildren","isFocused","center","target","scrollToPosition","newPosition","offsetSize","scrollSize","Math","abs","containerWidth","horizontal","onScroll","onFocusin","composedPath","onFocusout","ignoreFocusEvent","onFocus","relatedTarget","contains","focus","onFocusAffixes","onKeydown","toFocus","location","querySelector","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","focusableChildren","preventScroll","scrollTo","offsetStep","slotProps","hasAffixes","hasPrev","hasNext","clientSize","scrollSizeMax","VFadeTransition"],"sourceRoot":""}